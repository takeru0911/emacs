;;; Automatically generated on Wed Aug 19 02:30:07 2015
;;; Invoked by techtrain@treasure2015 using 24.5.1
(setq-default kill-ring '("laskf"))
(setq-default session-file-alist '(("~/emacs/.emacs" 2767 2740 1 nil nil 2767 (overwrite-mode)) ("~/emacs/.emacs.d/recentf" 675 nil 1 nil nil nil (overwrite-mode)) ("~/emacs/.emacs.d/elpa/ace-isearch-20150808.556/ace-isearch-autoloads.el" 1401 nil 1 nil nil 1401 (overwrite-mode)) ("~/emacs/.emacs.d/elpa/avy-20150807.648/avy-autoloads.el" 2659 nil 1 nil nil 2659 (overwrite-mode)) ("~/emacs/.emacs.d/elpa/ace-jump-mode-2.0.0.0/ace-jump-mode-autoloads.el" 1563 nil 1 nil nil 1563 (overwrite-mode)) ("~/emacs/.emacs.d/elpa/helm-swoop-20150704.839/helm-swoop-autoloads.el" 1691 nil 1 nil nil 1691 (overwrite-mode)) ("~/emacs/T.java" 51 nil 1 nil nil nil (overwrite-mode)) ("/usr/local/share/emacs/24.5/etc/NEWS" 108 nil 1 nil nil nil (overwrite-mode)) ("~/emacs/.emacs.d/elisp/realtime-preview.el" 1490 nil 1 nil nil nil (overwrite-mode)) ("~/emacs/.emacs.d/.session" 108 nil 1 nil nil nil (overwrite-mode)) ("~/emacs/.gitignore" 6 nil 1 nil nil 6 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs.d/elpa/ace-isearch-20150808.556/ace-isearch-autoloads.el" "~/.emacs.d/elpa/avy-20150807.648/avy-autoloads.el" "~/.emacs.d/elpa/ace-jump-mode-2.0.0.0/ace-jump-mode-autoloads.el" "~/.emacs.d/elpa/helm-swoop-20150704.839/helm-swoop-autoloads.el" "~/emacs/.emacs.d/recentf" "~/emacs/.emacs" "~/emacs/t.java" "~/emacs/T.java" "/usr/local/share/emacs/24.5/etc/NEWS" "~/emacs/.emacs.d/elisp/realtime-preview.el" "~/emacs/.gitignore" "~/.emacs.d/elpa/minibuf-isearch-20071112.234/minibuf-isearch-autoloads.el" "~/.emacs.d/elpa/session-20120510.1700/session-autoloads.el"))
(setq-default buffer-name-history '(".emacs"))
(setq-default command-history '((switch-to-buffer ".emacs" nil (quote force-same-window)) (package-list-packages nil) (execute-extended-command nil "package-list-packages") (helm-occur-from-isearch) (execute-extended-command nil "helm-occur-from-isearch") (iimage-mode (quote toggle)) (execute-extended-command nil "iimage-mode") (describe-bindings) (execute-extended-command nil "describe-bindings") (finder-list-keywords) (execute-extended-command nil "finder-list-keywords") (describe-key-briefly "" nil 1) (execute-extended-command nil "describe-key-briefly") (help) (execute-extended-command nil "help") (execute-extended-command nil "session-find-file")))
(setq-default extended-command-history '("package-list-packages" "helm-occur-from-isearch" "iimage-mode" "describe-bindings" "finder-list-keywords" "describe-key-briefly" "help" "session-find-file"))
(setq-default helm-c-grep-history '("setup"))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default helm-ff-history '("/home/techtrain/emacs/" "/usr/local/share/emacs/24.5/etc/" "/home/techtrain/emacs/.emacs.d/elisp/"))
(setq-default helm-grep-history '("setup"))
(setq-default helm-source-comint-input-ring '((name . "Comint history") (candidates lambda nil (with-helm-current-buffer \.\.\.)) (action . helm-comint-input-ring-action)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Add marked files to file-cache" . helm-ff-cache-add-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default minibuffer-history '("add"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default search-ring '("helm" "helm-swwp" "emacs" "mc"))
(setq-default yes-or-no-p-history '("yes"))
